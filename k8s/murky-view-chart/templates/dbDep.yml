apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgres.name }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      nodeSelector:
        role: database
      initContainers:
        - name: busybox
          image: busybox:latest
          args: ["rm", "-rf", "/var/lib/postgresql/data/lost+found"]
          volumeMounts:
            - mountPath: {{ .Values.postgres.volumes.storage.mountPath }}
              name: {{ .Values.postgres.volumes.storage.name }}
      containers:
        - name: {{ .Values.postgres.name }}
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: db-pass
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          volumeMounts:
            - mountPath: {{ .Values.postgres.volumes.storage.mountPath }}
              name: {{ .Values.postgres.volumes.storage.name }}
      volumes:
        - name: {{ .Values.postgres.volumes.storage.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.volumes.storage.pvcName }}
